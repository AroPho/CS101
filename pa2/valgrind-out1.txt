==9366== Memcheck, a memory error detector
==9366== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9366== Using Valgrind-3.14.0.GIT-5d41dadeb3-20180914 and LibVEX; rerun with -h for copyright info
==9366== Command: Lex infile1.txt outfile1.txt
==9366== 
--9366-- Valgrind options:
--9366--    --leak-check=full
--9366--    -v
--9366-- Contents of /proc/version:
--9366--   Linux version 3.10.0-957.10.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) ) #1 SMP Mon Mar 18 15:06:45 UTC 2019
--9366-- 
--9366-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--9366-- Page sizes: currently 4096, max supported 4096
--9366-- Valgrind library directory: /opt/rh/devtoolset-8/root/usr/lib64/valgrind
--9366-- Reading syms from /afs/cats.ucsc.edu/users/f/anguy200/cs101/pa2/Lex
--9366-- Reading syms from /usr/lib64/ld-2.17.so
--9366--   Considering /usr/lib/debug/.build-id/a5/27fe72908703c5972ae384e78d1850d1881ee7.debug ..
--9366--   .. build-id is valid
--9366-- Reading syms from /opt/rh/devtoolset-8/root/usr/lib64/valgrind/memcheck-amd64-linux
--9366--    object doesn't have a symbol table
--9366--    object doesn't have a dynamic symbol table
--9366-- Scheduler: using generic scheduler lock implementation.
--9366-- Reading suppressions file: /opt/rh/devtoolset-8/root/usr/lib64/valgrind/default.supp
==9366== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9366-by-anguy200-on-unix4.lt.ucsc.edu
==9366== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9366-by-anguy200-on-unix4.lt.ucsc.edu
==9366== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9366-by-anguy200-on-unix4.lt.ucsc.edu
==9366== 
==9366== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9366== don't want to do, unless you know exactly what you're doing,
==9366== or are doing some strange experiment):
==9366==   /opt/rh/devtoolset-8/root/usr/lib64/valgrind/../../bin/vgdb --pid=9366 ...command...
==9366== 
==9366== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9366==   /path/to/gdb Lex
==9366== and then give GDB the following command
==9366==   target remote | /opt/rh/devtoolset-8/root/usr/lib64/valgrind/../../bin/vgdb --pid=9366
==9366== --pid is optional if only one valgrind process is running
==9366== 
--9366-- REDIR: 0x4019d60 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c5bf5 (???)
--9366-- REDIR: 0x4019b30 (ld-linux-x86-64.so.2:index) redirected to 0x580c5c0f (???)
--9366-- Reading syms from /opt/rh/devtoolset-8/root/usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--9366-- Reading syms from /opt/rh/devtoolset-8/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
==9366== WARNING: new redirection conflicts with existing -- ignoring it
--9366--     old: 0x04019d60 (strlen              ) R-> (0000.0) 0x580c5bf5 ???
--9366--     new: 0x04019d60 (strlen              ) R-> (2007.0) 0x04c2d070 strlen
--9366-- REDIR: 0x4019ce0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e1c0 (strcmp)
--9366-- REDIR: 0x401a9a0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31d70 (mempcpy)
--9366-- Reading syms from /usr/lib64/libc-2.17.so
--9366--   Considering /usr/lib/debug/usr/lib64/libc-2.17.so.debug ..
--9366--   .. CRC mismatch (computed 1bf8663f wanted 1812e268)
--9366-- REDIR: 0x4ec6700 (libc.so.6:strcasecmp) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--9366-- REDIR: 0x4ec3480 (libc.so.6:strnlen) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--9366-- REDIR: 0x4ec89d0 (libc.so.6:strncasecmp) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--9366-- REDIR: 0x4ec5ee0 (libc.so.6:memset) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--9366-- REDIR: 0x4ec5e90 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--9366-- REDIR: 0x4ec4e70 (libc.so.6:__GI_strrchr) redirected to 0x4c2ca30 (__GI_strrchr)
--9366-- REDIR: 0x4ebc160 (libc.so.6:malloc) redirected to 0x4c29dac (malloc)
--9366-- REDIR: 0x4edbef0 (libc.so.6:__GI_strstr) redirected to 0x4c32000 (__strstr_sse2)
--9366-- REDIR: 0x4ec5570 (libc.so.6:memchr) redirected to 0x4c2e260 (memchr)
--9366-- REDIR: 0x4ecb110 (libc.so.6:__GI_memcpy) redirected to 0x4c2ee70 (__GI_memcpy)
--9366-- REDIR: 0x4ec2d90 (libc.so.6:strcpy) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--9366-- REDIR: 0x4ed0cb0 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4c2d090 (strcpy)
--9366-- REDIR: 0x4ec1900 (libc.so.6:strcmp) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--9366-- REDIR: 0x4f75000 (libc.so.6:__strcmp_sse42) redirected to 0x4c2e170 (__strcmp_sse42)
--9366-- REDIR: 0x4ec33a0 (libc.so.6:__GI_strlen) redirected to 0x4c2cfd0 (__GI_strlen)
--9366-- REDIR: 0x4ec60b0 (libc.so.6:__GI_mempcpy) redirected to 0x4c31aa0 (__GI_mempcpy)
--9366-- REDIR: 0x4ebc580 (libc.so.6:free) redirected to 0x4c2aea6 (free)
==9366== 
==9366== HEAP SUMMARY:
==9366==     in use at exit: 0 bytes in 0 blocks
==9366==   total heap usage: 15 allocs, 15 frees, 1,456 bytes allocated
==9366== 
==9366== All heap blocks were freed -- no leaks are possible
==9366== 
==9366== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==9366== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
